---
// ~/components/SimpleShowcaseCard.astro
import { Image } from "astro:assets";

export interface Props {
  title: string;
  description: string;
  imagePath: ImageMetadata;
  link: string;
}

const { title, description, imagePath, link } = Astro.props;
---


<!-- <a class="group relative block overflow-hidden rounded-lg">
    <div class="relative"> <Image
        src={imagePath}
        alt={title}
        class="h-full w-full opacity-80 transition-transform duration-300 ease-in-out transform scale-90 group-hover:scale-90 group-hover:opacity-10"
      />
      <div class="absolute inset-0 flex items-center justify-center opacity-100 pointer-events-none">
        <div class="text-center bg-black bg-opacity-0 p-4 rounded-lg opacity-0 group-hover:opacity-100 transition-all duration-300">
          <h3 class="text-xl font-bold var(--color-text)">{title}</h3>
          <p
            class="text-sm var(--color-text)"
          >
            {description}
          </p>
        </div>
      </div>
    </div>
    <div class="text-center mt-2">
      <h3 class="text-xl font-bold var(--color-text) group-hover:hidden">
        {title}
      </h3>
    </div>
  </a> -->

  <a
  class="group relative block overflow-hidden rounded-lg transform scale-100 simple-showcase-card"
  style="border: 4px solid rgba(255, 105, 180, 0); border-radius: 24px; transform: scale(1.1);"
>
  <div style="display: flex; align-items: center; justify-content: center;"> 
    <Image
      src={imagePath}
      alt={title}
      style="position: absolute; left: %; top: -15%; opacity: 0.12; transform: scale(0.4); width: 250px; height: 250px;" 
    />
    <div
      style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; display: flex; align-items: center; justify-content: center; opacity: 1; pointer-events: none;"
    >
      <div
        style="text-align: center; background-color: rgba(0, 0, 0, 0); padding: 1rem; border-radius: 0.5rem; opacity: 1; transition: all 0.3s ease-in-out;"
      >
        <h3 style="font-size: 1.51rem; line-height: 1.7rem; font-weight: 700; color: var(--color-text);">
          <!-- {title} -->
          {title.split(' ').map((word) => (
            <Fragment>
              {word.toLowerCase() === 'passport' || word.toLowerCase().includes('fragile') || word.toLowerCase().includes('document') || word.toLowerCase().includes('emergency') || word.toLowerCase().includes('exhibition')? 
                <span class="text-primary">{word} </span> : 
                <span>{word} </span>
              }
            </Fragment>
          ))}
        
        </h3>
        <p style="font-size: 1.15rem; line-height: 1.25rem; color: var(--color-text);">
          <!-- {description} -->
          {description.split(' ').map((word) => (
            <Fragment>
              {word.toLowerCase() === 'arknet' || word.toLowerCase().includes('on-time') || word.toLowerCase().includes('logistics') || word.toLowerCase().includes('trackable') || word.toLowerCase().includes('on-time')? 
                <span class="text-primary">{word} </span> : 
                <span>{word} </span>
              }
            </Fragment>
          ))}
        </p>
      </div>
    </div>
  </div>
  <div style="text-align: center; margin-top: 0.5rem;"></div>
</a>