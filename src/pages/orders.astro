---
import Header from "~/components/header.astro";
import "~/styles/index.css";

const auth = Astro.locals.auth();
const userId = auth.userId;

console.log("Current user ID:", userId);

interface Order {
  user: string;
  order: number;
  stripe_price_id: string;
  pickup: string;
  destination: string;
  price: number;
  completed: number;
}

let orders: Order[] = [];
let error: string | null = null;
let responseStatus: number | null = null;
let responseText: string | null = null;

try {
  const apiUrl = new URL('/api/orders', Astro.url);
  console.log("Fetching from:", apiUrl.toString());
  
  const response = await fetch(apiUrl.toString());
  responseStatus = response.status;
  responseText = await response.text();
  
  if (!response.ok) {
    throw new Error(`HTTP error! status: ${response.status}`);
  }
  
  const allOrders = JSON.parse(responseText);
  console.log("Fetched orders:", allOrders);

  if (!Array.isArray(allOrders)) {
    throw new Error("Received data is not an array");
  }

  orders = allOrders.filter(order => order.user === userId);
} catch (e) {
  console.error("Failed to fetch or process orders:", e);
  error = "Failed to load orders. Please check the console for more details.";
}
---
<!doctype html>
<html lang="en" class="h-full motion-safe:scroll-smooth" data-theme="dark">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width" />
    <title>Your Orders - Arknet Couriers</title>
    <link rel="icon" href="/favicon.ico" type="image/x-icon" />
    <link rel="icon" href="/favicon.svg" type="image/svg+xml" />
    
    <!-- Initialize theme -->
    <script is:inline>
      const themeSaved = localStorage.getItem("theme");

      if (themeSaved) {
        document.documentElement.dataset.theme = themeSaved;
      } else {
        const prefersDark = window.matchMedia(
          "(prefers-color-scheme: dark)",
        ).matches;
        document.documentElement.dataset.theme = prefersDark ? "dark" : "light";
      }

      window
        .matchMedia("(prefers-color-scheme: dark)")
        .addEventListener("change", (event) => {
          if (!localStorage.getItem("theme")) {
            document.documentElement.dataset.theme = event.matches
              ? "dark"
              : "light";
          }
        });
    </script>
    <style>
        /* Base styles */
        body {
            transition: background-color 0.3s, color 0.3s;
            font-size: 16px;
        }
        
        /* Light theme */
        [data-theme="light"] {
            --bg-primary: #ffffff;
            --bg-secondary: #f3f4f6;
            --text-primary: #111827;
            --text-secondary: #4b5563;
            --border-color: #e5e7eb;
            --hover-bg: #f9fafb;
            --table-header-bg: #f3f4f6;
            --status-pending-bg: #fef3c7;
            --status-pending-text: #92400e;
            --status-completed-bg: #d1fae5;
            --status-completed-text: #065f46;
            --shadow-color: rgba(0, 0, 0, 0.1);
            --shadow: 0 4px 6px -1px var(--shadow-color),
                      0 2px 4px -1px var(--shadow-color);
        }
        
        /* Dark theme */
        [data-theme="dark"] {
            --bg-primary: #111827;
            --bg-secondary: #1f2937;
            --text-primary: #f9fafb;
            --text-secondary: #9ca3af;
            --border-color: #374151;
            --hover-bg: #374151;
            --table-header-bg: #1f2937;
            --status-pending-bg: #84370b7a;
            --status-pending-text: #d2a125;
            --status-completed-bg: #05463498;
            --status-completed-text: #34d399;
            --shadow-color: rgba(0, 0, 0, 0.5);
            --glow-color: rgba(255, 255, 255, 0.05);
            --shadow: 0 4px 6px -1px var(--shadow-color),
                      0 2px 4px -1px var(--shadow-color),
                      0 0 0 1px var(--glow-color);
        }

        
        /* Applied styles */
        body {
            background-color: var(--bg-primary);
            color: var(--text-primary);
        }
        
        .gradient-text {
            /* Adjusted gradient to balance purple and pink */
            background: linear-gradient(135deg, 
                #7a52f1 0%, 
                #ff0073 40%
            );
            -webkit-background-clip: text;
            background-clip: text;
            color: transparent;
            font-size: 2.5rem;
            margin-bottom: 1.5rem;
        }
        
        .orders-table {
            width: 100%;
            border-radius: 0.5rem;
            overflow: hidden;
            box-shadow: var(--shadow);
            border: 0px solid var(--border-color);
            font-size: 1.25rem;
        }
        
        /* Rest of the styles remain the same */
        .orders-table thead {
            background-color: var(--table-header-bg);
        }
        
        .orders-table th {
            padding: 1.25rem;
            text-align: left;
            font-weight: 600;
            text-transform: uppercase;
            font-size: 1.1rem;
            color: var(--text-secondary);
        }
        
        .orders-table td {
            padding: 1.25rem;
            border-bottom: 1px solid var(--border-color);
            font-size: 1.25rem;
        }
        
        .orders-table tbody tr {
            transition: background-color 0.2s;
        }
        
        .orders-table tbody tr:hover {
            background-color: var(--hover-bg);
        }
        
        .status-badge {
            padding: 0.5rem 1rem;
            border-radius: 9999px;
            font-weight: 500;
            font-size: 1.1rem;
            display: inline-block;
        }
        
        .status-badge.pending {
            background-color: var(--status-pending-bg);
            color: var(--status-pending-text);
        }
        
        .status-badge.completed {
            background-color: var(--status-completed-bg);
            color: var(--status-completed-text);
        }
        
        .price {
            font-weight: 600;
            font-size: 1.35rem;
        }
        
        .no-orders {
            background-color: var(--bg-secondary);
            border-radius: 0.5rem;
            padding: 2rem;
            text-align: center;
            color: var(--text-secondary);
            font-size: 1.25rem;
        }

        @media (max-width: 768px) {
            .orders-table {
                font-size: 1.1rem;
            }
            
            .orders-table th,
            .orders-table td {
                padding: 1rem;
            }
        }
    </style>
</head>
<body class="h-full overflow-x-hidden">
    <main class="container mx-auto px-10 py-20">
        <h1 class="gradient-text font-bold">Your Orders</h1>
        
        {error ? (
            <div class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative mb-4" role="alert">
                <strong class="font-bold">Error:</strong>
                <span class="block sm:inline">{error}</span>
                <p class="mt-2">Response Status: {responseStatus}</p>
                <p>Response Text: {responseText}</p>
            </div>
        ) : orders.length > 0 ? (
            <div class="orders-container">
                <table class="orders-table">
                    <thead>
                        <tr>
                            <th>Delivery Address</th>
                            <th>Price</th>
                            <th>Status</th>
                        </tr>
                    </thead>
                    <tbody>
                        {orders.map((order) => (
                            <tr>
                                <td>{order.destination}</td>
                                <td>
                                    <span class="price">Â£{order.price.toFixed(2)}</span>
                                </td>
                                <td>
                                    <span class={`status-badge ${order.completed ? 'completed' : 'pending'}`}>
                                        {order.completed ? 'Completed' : 'Pending'}
                                    </span>
                                </td>
                            </tr>
                        ))}
                    </tbody>
                </table>
            </div>
        ) : (
            <div class="no-orders">
                <p>You have no orders yet.</p>
            </div>
        )}
    </main>
</body>
</html>