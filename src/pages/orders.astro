---
const auth = Astro.locals.auth();
const userId = auth.userId;

console.log("Current user ID:", userId);

interface Order {
  user: string;
  order: number;
  stripe_price_id: string;
  pickup: string;
  destination: string;
  price: number;
  completed: number;
}

let orders: Order[] = [];
let error: string | null = null;
let responseStatus: number | null = null;
let responseText: string | null = null;

try {
  const apiUrl = new URL('/api/orders', Astro.url);
  console.log("Fetching from:", apiUrl.toString());
  
  const response = await fetch(apiUrl.toString());
  responseStatus = response.status;
  responseText = await response.text();
  
  if (!response.ok) {
    throw new Error(`HTTP error! status: ${response.status}`);
  }
  
  const allOrders = JSON.parse(responseText);
  console.log("Fetched orders:", allOrders);

  if (!Array.isArray(allOrders)) {
    throw new Error("Received data is not an array");
  }

  orders = allOrders.filter(order => order.user === userId);
} catch (e) {
  console.error("Failed to fetch or process orders:", e);
  error = "Failed to load orders. Please check the console for more details.";
}
---

<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Your Orders</title>
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
</head>
<body class="bg-gray-100 min-h-screen">
    <div class="container mx-auto px-4 py-8">
        <h1 class="text-3xl font-bold mb-6 text-gray-800">Your Orders</h1>
        
        {error ? (
            <div class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative mb-4" role="alert">
                <strong class="font-bold">Error:</strong>
                <span class="block sm:inline">{error}</span>
                <p class="mt-2">Response Status: {responseStatus}</p>
                <p>Response Text: {responseText}</p>
            </div>
        ) : orders.length > 0 ? (
            <div class="bg-white shadow-md rounded-lg overflow-hidden">
                <table class="min-w-full divide-y divide-gray-200">
                    <thead class="bg-gray-50">
                        <tr>
                            {/* <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Pickup</th> */}
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Delivery address</th>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Price</th>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Status</th>
                        </tr>
                    </thead>
                    <tbody class="bg-white divide-y divide-gray-200">
                        {orders.map((order) => (
                            <tr class="hover:bg-gray-50 transition-colors duration-200">
                                {/* <td class="px-6 py-4 whitespace-nowrap">{order.pickup}</td> */}
                                <td class="px-6 py-4 whitespace-nowrap">{order.destination}</td>
                                <td class="px-6 py-4 whitespace-nowrap">
                                    <span class="text-sm font-semibold text-gray-900">Â£{order.price.toFixed(2)}</span>
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap">
                                    <span class={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full ${order.completed ? 'bg-green-100 text-green-800' : 'bg-yellow-100 text-yellow-800'}`}>
                                        {order.completed ? 'Completed' : 'Pending'}
                                    </span>
                                </td>
                            </tr>
                        ))}
                    </tbody>
                </table>
            </div>
        ) : (
            <div class="bg-white shadow-md rounded-lg p-6 text-center">
                <p class="text-gray-600">You have no orders yet.</p>
            </div>
        )}
    </div>

    <script define:vars={{ordersJson: JSON.stringify(orders)}}>
        console.log('Your Orders:', ordersJson);
    </script>
</body>
</html>